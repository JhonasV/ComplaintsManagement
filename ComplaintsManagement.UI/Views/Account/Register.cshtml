@model ComplaintsManagement.UI.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}

<div class="row">
    <div class="col-lg-12">
        <div class="card w-50 ml-auto mb-5 mr-auto mt-1 ">
            <div class="card-header  bg-primary"><h3 class="text-white">@ViewBag.Title</h3></div>
            <section id="loginForm" class="card-body">
                @using (Html.BeginForm("Register", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { role = "form" }))
                {
                    @Html.AntiForgeryToken()


                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(m => m.Name, new { @class = "control-label" })
                        @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.LastName, new { @class = "control-label" })
                        @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.DocumentNumber, new { @class = "control-label" })
                        @Html.TextBoxFor(m => m.DocumentNumber, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.DocumentNumber, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Email, new { @class = "control-label" })
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Password, new { @class = "control-label" })
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "control-label" })
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <input type="submit" class="btn btn-primary btn-block" value="Register" />
                    </div>
                    <div class="text-center font-weight-bold">
                        <span class="w-100">O</span>
                    </div>

                    <div class="form-group mt-3">
                        @Html.ActionLink("Ya tengo una cuenta", "Login", null, new { @Class = "btn btn-outline-secondary btn-block" })
                    </div>
                    @* Enable this once you have account confirmation enabled for password reset functionality
                <p>
                    @Html.ActionLink("Forgot your password?", "ForgotPassword")
                </p>*@
                }
            </section>
        </div>
    </div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
