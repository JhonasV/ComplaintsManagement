@model  ComplaintsManagement.UI.Models.TaskResult<ComplaintsManagement.Domain.DTOs.UsersDto>

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="card">
    <div class="card-header bg-primary"><h2 class="text-white">Mantenimiento de Clientes</h2></div> 
 
    <div class="container">
        @using (Html.BeginForm(actionName: "Edit", controllerName: "Customers", method: FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal card-body">
                <h4>Edicion de Clientes</h4>
                <hr />

                @if (!Model.Success)
                {
                    <span class="alert alert-danger" style="margin-top: 2rem;">@Model.Message</span>
                    <hr />
                }

                @if (Model.Success && Model.Message != null && Model.Message.Length > 0)
                {
                    <span class="alert alert-success" style="margin-top: 2rem;">@Model.Message</span>
                    <hr />
                }
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Data.Id)

                <div class="form-group">
                    @Html.LabelFor(model => model.Data.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Data.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Data.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Data.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Data.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Data.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Data.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Data.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Data.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Data.DocumentNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Data.DocumentNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Data.DocumentNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Data.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Data.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Data.PhoneNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Data.DepartmentId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Data.DepartmentId, (List<SelectListItem>)ViewBag.Departments , new { @Class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Data.DepartmentId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" onclick="return confirm('¿Estás seguro de actualizar este registro?')" value="Actualizar" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        }

        <div class="card-footer w-100">
            @Html.ActionLink("Regresar al listado de clientes", "Index", null, new { @Class = "btn btn-default" })
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
